Node.js - Beginner to Advance course with projects



Section 01: Javascript - Bonus


01. Course introduction 

02. Javascript story - from console to v8 engine

03. How Javascript executes the code - Behind the scene
-open link: https://nodejs.org/en
-type command: node -v
-course hello.js file
-open terminal and type command: node hello.js

04. Data types, variables and constants in Javascript
-create folder 01-part and files printing.js, datatype.js and changes.js
-type command: node printing.js
-type command: node datatype.js
-type command: node changes.js

05. Operations in Javascript
-create files operations.js, logical.js, assignment.js and operatorPrecedence.js
-type command: node operations.js
-type command: node logical.js
-type command: node assignment.js
-type command: node operatorPrecedence.js

06. Primitives in Javascript
-create folder 02-part and primitives.js file
-type command: node primitives.js

07. Non primitives in Javascript
-create nonPrimitives.js file
-type command: node nonPrimitives.js

08. Five challenges on conditions in Javascript
-create folder 03-part and condition-challenges.js file
-type command: node condition-challenges.js

09. Facing ten challenges in Array and methods
-create folder 04-part and arrayChallenges.js file
-type command: node arrayChallenges.js

10. Introduction to loops in Javascript
-create loopChallenges.js file
-type command: node loopChallenges.js

11. Defeat 6 loop challenges in Javascript
-create more loops in loopChallenges.js file
-type command: node loopChallenges.js

12. Ten loop challenges to learn all kind of loops in Javascript
-in folder 04-part create levelUpChallenges.js file
-type command: node levelUpChallenges.js

13. Function, arrow function, THIS and context in Javascript
-create folder 05-part and functions.js file
-type command: node functions.js

14. Higher order functions and nested functions in Javascript
-create more functions in functions.js file



Section 02: Getting started with Node.js: From core concepts to modules and file system


15. What is Node.js and why use it for server-side development 

16. Installing Node.js and setting up a local development environment

17. Your first Node.js script: Writing and running Hello world
-create folder hello-world and script.js file
-type command: node --help
-type command: node --watch script.js

18. Node.js vs browser Javascript engines: key differences
-in script.js file invoke function alert()
-two different environments to run JS: Browser and Node.js

19. Understanding Node.js modules and their role in structuring code
-create folder 01-modules and index.js file
-three types of modules: built in, 3rd party and custom modules
-in index.js file create variable const fs
-create notes.txt file
-create variable const content
-open link: https://stackoverflow.com/questions/51349900/what-does-node-module-wrapper-function-mean-in-node

20. Working with third-party modules using npm and package.json
-open link: https://www.npmjs.com
-open link: https://www.npmjs.com/package/@types/node
-type command: npm init
-type command: npm i @types/node
-check folder node_modules (do not touch)
-check package-lock.json file
-create .gitignore file to ignore folder node_modules
-delete folder node_modules and type command npm i
-type command: node --watch index.js

21. Using the file system (FS) module to read and write files
-open link: https://nodejs.org/api/fs.html
-in index.js file update function require()
-invoke function fs.writeFileSync()
-invoke function fs.appendFileSync()
-check copy.txt file
-invoke function fs.mkdirSync()
-invoke function fs.rmdirSync()
-invoke function fs.unlinkSync()

22. Understanding blocking vs non-blocking code execution in Node.js
-create script.js file
-in script.js file import fs module
-type command: node --watch script.js

23. The internal architecture of Node.js: Event loop and thread pool
-create folder images and add an image of internal architecture



Section 03: Understanding events and buffers in Node.js: Building reactive apps


24. What are events in Node.js and why are they important ?
-open link: https://nodejs.org/api/events.html

25. Creating and using event emitters in Node.js
-create folder 02-events and myEvents.js file
-in myEvents.js file add logic for event emitter
-type command: node --watch myEvents.js
-create myEventClass.js file and class Chat
-type command: node --watch myEventClass.js
-create myErrorEvents.js file
-in myErrorEvents.js file add logic for emitting error event
-type command: node --watch myErrorEvents.js